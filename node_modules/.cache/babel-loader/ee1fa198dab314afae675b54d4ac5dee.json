{"remainingRequest":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\components\\DoneTests.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\components\\DoneTests.vue","mtime":1557060453678},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554396940214},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js","mtime":1554396917624},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554396940214},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\vue-loader\\lib\\index.js","mtime":1554396940802}],"contextDependencies":[],"result":["import _getIterator from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front \\u2014 backup\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"DoneTests\",\n  computed: {\n    resp: function resp() {\n      var userid = this.$store.state.user_data.id;\n      var data = this.$store.state.test_data;\n      var arr = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n\n          if (row.owner.id === userid) {\n            arr.push(row);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return arr;\n    },\n    disabledOpen: function disabledOpen() {\n      var result = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(this.resp), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var date = _step2.value;\n          result.push(date.date_open !== null);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return result;\n    },\n    disabledClose: function disabledClose() {\n      var result = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getIterator(this.resp), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var date = _step3.value;\n          result.push(date.date_close !== null);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return result;\n    }\n  },\n  methods: {\n    openTest: function openTest(id) {\n      this.$store.dispatch(\"openTest\", id);\n    },\n    closeTest: function closeTest(id) {\n      this.$store.dispatch(\"closeTest\", id);\n    }\n  }\n};",{"version":3,"sources":["DoneTests.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,UAAA,GAAA,GAAA,EAAA;AAHA;AAAA;AAAA;;AAAA;AAKA,0CAAA,IAAA,4GAAA;AAAA,cAAA,GAAA;;AACA,cAAA,GAAA,CAAA,KAAA,CAAA,EAAA,KAAA,MAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,aAAA,GAAA;AACA,KAbA;AAeA,IAAA,YAAA,EAAA,wBAAA;AACA,UAAA,MAAA,GAAA,EAAA;AADA;AAAA;AAAA;;AAAA;AAGA,2CAAA,KAAA,IAAA,iHAAA;AAAA,cAAA,IAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,KAAA,IAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,aAAA,MAAA;AACA,KAvBA;AAyBA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,MAAA,GAAA,EAAA;AADA;AAAA;AAAA;;AAAA;AAGA,2CAAA,KAAA,IAAA,iHAAA;AAAA,cAAA,IAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,KAAA,IAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,aAAA,MAAA;AACA;AAjCA,GAFA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,EAAA,EAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,KAHA;AAKA,IAAA,SAAA,EAAA,mBAAA,EAAA,EAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAAA,EAAA;AACA;AAPA;AArCA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <td>Name</td>\r\n                <td>Description</td>\r\n                <td>Creation Date</td>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"(row, key) in resp\">\r\n                <td>{{ row.name }}</td>\r\n                <td>{{ row.description }}</td>\r\n                <td>{{ row.date_creation }}</td>\r\n                <td><v-btn :disabled=\"disabledOpen[key]\" color=\"green white--text\" @click=\"openTest(row.id)\">Open</v-btn><v-btn :disabled=\"disabledClose[key]\" color=\"red white--text\" @click=\"closeTest(row.id)\">Close</v-btn></td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"DoneTests\",\r\n        computed: {\r\n            resp: function() {\r\n                var userid = this.$store.state.user_data.id;\r\n                var data = this.$store.state.test_data;\r\n                var arr = [];\r\n\r\n                for(let row of data) {\r\n                    if(row.owner.id === userid) {\r\n                        arr.push(row);\r\n                    }\r\n                }\r\n\r\n                return arr;\r\n            },\r\n\r\n            disabledOpen: function() {\r\n                let result = [];\r\n\r\n                for(let date of this.resp) {\r\n                    result.push(date.date_open !== null);\r\n                }\r\n\r\n                return result;\r\n            },\r\n\r\n            disabledClose: function() {\r\n                let result = [];\r\n\r\n                for(let date of this.resp) {\r\n                    result.push(date.date_close !== null);\r\n                }\r\n\r\n                return result;\r\n            }\r\n        },\r\n        methods: {\r\n            openTest: function(id) {\r\n                this.$store.dispatch(\"openTest\", id);\r\n            },\r\n\r\n            closeTest: function(id) {\r\n                this.$store.dispatch(\"closeTest\", id);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    @import \"../assets/css/colors.scss\";\r\n\r\n    .container {\r\n        table {\r\n            thead {\r\n                td {\r\n                    background: $lighter-blue;\r\n                    border: .125rem solid black;\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n\r\n            td {\r\n                padding: .5rem;\r\n                width: 16.66666%;\r\n                border: .0625rem solid black;\r\n                box-sizing: border-box;\r\n                font-weight: 100;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}