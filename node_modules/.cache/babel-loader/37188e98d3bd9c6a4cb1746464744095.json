{"remainingRequest":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\src\\store.js","dependencies":[{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\src\\store.js","mtime":1554669172404},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554396940214},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1554396917624},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\node_modules\\eslint-loader\\index.js","mtime":1554673786667}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    response: \"\",\n    baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n    baseRegisterUrl: \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n  },\n  mutations: {\n    setResponse: function setResponse(state, resp) {\n      state.response = resp;\n    }\n  },\n  actions: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, data) {\n        var _this = this;\n\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                _context.next = 3;\n                return axios.post(state.baseRegisterUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response);\n                  alert(\"Успешно\");\n\n                  _this.$router.push(\"/\");\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  alert(\"Пользователь уже зарегистрирован!\");\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function register(_x, _x2) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }(),\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2, data) {\n        var _this2 = this;\n\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.post(state.baseLoginUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response.data.key);\n                  localStorage.setItem('token', _this2.response);\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  localStorage.removeItem(\"token\");\n                  alert(\"Такого пользователя не существует!\");\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }\n});",{"version":3,"sources":["C:\\Users\\Azamat\\Desktop\\QuiEz_Front\\src\\store.js"],"names":["Vue","Vuex","axios","use","Store","state","response","baseLoginUrl","baseRegisterUrl","mutations","setResponse","resp","actions","register","data","commit","post","headers","Accept","then","alert","$router","push","catch","error","login","key","localStorage","setItem","removeItem"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE,iDAFT;AAGLC,IAAAA,eAAe,EACb;AAJG,GADqB;AAO5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGL,KADH,EACUM,IADV,EACgB;AACvBN,MAAAA,KAAK,CAACC,QAAN,GAAiBK,IAAjB;AACD;AAHQ,GAPiB;AAY5BC,EAAAA,OAAO,EAAE;AACDC,IAAAA,QADC;AAAA;AAAA;AAAA,qDAC2BC,IAD3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACUT,gBAAAA,KADV,QACUA,KADV,EACiBU,MADjB,QACiBA,MADjB;AAAA;AAAA,uBAEQb,KAAK,CACfc,IADU,CACLX,KAAK,CAACG,eADD,EACkB,gBAAeM,IAAf,CADlB,EACwC;AACjDG,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,MAAM,EAAE,kBADD;AAEP,oCAAgB;AAFT;AADwC,iBADxC,EAOVC,IAPU,CAOL,UAAAb,QAAQ,EAAI;AAChBS,kBAAAA,MAAM,CAAC,aAAD,EAAgBT,QAAhB,CAAN;AACAc,kBAAAA,KAAK,CAAC,SAAD,CAAL;;AACA,kBAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACD,iBAXU,EAYVC,KAZU,CAYJ,UAAAC,KAAK,EAAI;AACdT,kBAAAA,MAAM,CAAC,aAAD,EAAgBS,KAAhB,CAAN;AACAJ,kBAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,iBAfU,CAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBDK,IAAAA,KAnBC;AAAA;AAAA;AAAA,uDAmBwBX,IAnBxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBOT,gBAAAA,KAnBP,SAmBOA,KAnBP,EAmBcU,MAnBd,SAmBcA,MAnBd;AAAA;AAAA,uBAoBQb,KAAK,CACfc,IADU,CACLX,KAAK,CAACE,YADD,EACe,gBAAeO,IAAf,CADf,EACqC;AAC9CG,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,MAAM,EAAE,kBADD;AAEP,oCAAgB;AAFT;AADqC,iBADrC,EAOVC,IAPU,CAOL,UAAAb,QAAQ,EAAI;AAChBS,kBAAAA,MAAM,CAAC,aAAD,EAAgBT,QAAQ,CAACQ,IAAT,CAAcY,GAA9B,CAAN;AACAC,kBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,MAAI,CAACtB,QAAnC;AACD,iBAVU,EAWViB,KAXU,CAWJ,UAAAC,KAAK,EAAI;AACdT,kBAAAA,MAAM,CAAC,aAAD,EAAgBS,KAAhB,CAAN;AACAG,kBAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAT,kBAAAA,KAAK,CAAC,oCAAD,CAAL;AACD,iBAfU,CApBR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAZmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    response: \"\",\n    baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n    baseRegisterUrl:\n      \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n  },\n  mutations: {\n    setResponse(state, resp) {\n      state.response = resp;\n    }\n  },\n  actions: {\n    async register({ state, commit }, data) {\n      return await axios\n        .post(state.baseRegisterUrl, JSON.stringify(data), {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(response => {\n          commit(\"setResponse\", response);\n          alert(\"Успешно\");\n          this.$router.push(\"/\");\n        })\n        .catch(error => {\n          commit(\"setResponse\", error);\n          alert(\"Пользователь уже зарегистрирован!\");\n        });\n    },\n    async login({ state, commit }, data) {\n      return await axios\n        .post(state.baseLoginUrl, JSON.stringify(data), {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(response => {\n          commit(\"setResponse\", response.data.key);\n          localStorage.setItem('token', this.response);\n        })\n        .catch(error => {\n          commit(\"setResponse\", error);\n          localStorage.removeItem(\"token\");\n          alert(\"Такого пользователя не существует!\");\n        });\n    }\n  }\n});\n"]}]}