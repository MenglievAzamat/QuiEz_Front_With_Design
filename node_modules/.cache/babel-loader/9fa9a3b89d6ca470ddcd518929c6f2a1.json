{"remainingRequest":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js","dependencies":[{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js","mtime":1557006914972},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554396940214},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js","mtime":1554396917624},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\eslint-loader\\index.js","mtime":1554673786667}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front \\u2014 backup\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front \\u2014 backup\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user_data: [],\n    test_data: [],\n    response: \"\",\n    baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n    baseRegisterUrl: \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n  },\n  mutations: {\n    setResponse: function setResponse(state, resp) {\n      state.response = resp;\n    },\n    setUserData: function setUserData(state, resp) {\n      state.user_data = resp;\n    },\n    setTestData: function setTestData(state, resp) {\n      state.test_data = resp;\n    }\n  },\n  actions: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, data) {\n        var _this = this;\n\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                _context.next = 3;\n                return axios.post(state.baseRegisterUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response);\n                  alert(\"Успешно\");\n\n                  _this.$router.push(\"/\");\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  alert(\"Пользователь уже зарегистрирован!\");\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function register(_x, _x2) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }(),\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2, data) {\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.post(state.baseLoginUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response.data.key);\n                  sessionStorage.setItem(\"token\", response.data.key);\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  sessionStorage.removeItem(\"token\");\n                  alert(\"Такого пользователя не существует!\");\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }(),\n    getUserData: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref3) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return axios.get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\", {\n                  headers: {\n                    Authorization: \"Token \" + sessionStorage.token,\n                    Accept: \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setUserData\", response.data);\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getUserData(_x5) {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }(),\n    getAllTests: function () {\n      var _getAllTests = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref4) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context4.next = 3;\n                return axios.get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/test/?format=json\", {\n                  headers: {\n                    Authorization: \"Token \" + sessionStorage.token,\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setTestData\", response.data);\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getAllTests(_x6) {\n        return _getAllTests.apply(this, arguments);\n      }\n\n      return getAllTests;\n    }(),\n    createTest: function () {\n      var _createTest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(_ref5, data) {\n        var _this2 = this;\n\n        var commit;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref5.commit;\n                _context5.next = 3;\n                return axios.post(\"https://quiez-api.herokuapp.com/api/test/?format=json\", _JSON$stringify(data), {\n                  headers: {\n                    Authorization: \"Token \" + sessionStorage.token,\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  alert(\"Success\");\n\n                  _this2.$router.push(\"#/\");\n                }).catch(function (error) {\n                  alert(error);\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function createTest(_x7, _x8) {\n        return _createTest.apply(this, arguments);\n      }\n\n      return createTest;\n    }()\n  }\n});",{"version":3,"sources":["C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js"],"names":["Vue","Vuex","axios","use","Store","state","user_data","test_data","response","baseLoginUrl","baseRegisterUrl","mutations","setResponse","resp","setUserData","setTestData","actions","register","data","commit","post","headers","Accept","then","alert","$router","push","catch","error","login","key","sessionStorage","setItem","removeItem","getUserData","get","Authorization","token","getAllTests","createTest"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,YAAY,EAAE,iDAJT;AAKLC,IAAAA,eAAe,EACb;AANG,GADqB;AAS5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGP,KADH,EACUQ,IADV,EACgB;AACvBR,MAAAA,KAAK,CAACG,QAAN,GAAiBK,IAAjB;AACD,KAHQ;AAITC,IAAAA,WAJS,uBAIGT,KAJH,EAIUQ,IAJV,EAIgB;AACvBR,MAAAA,KAAK,CAACC,SAAN,GAAkBO,IAAlB;AACD,KANQ;AAOTE,IAAAA,WAPS,uBAOGV,KAPH,EAOUQ,IAPV,EAOgB;AACvBR,MAAAA,KAAK,CAACE,SAAN,GAAkBM,IAAlB;AACD;AATQ,GATiB;AAoB5BG,EAAAA,OAAO,EAAE;AACDC,IAAAA,QADC;AAAA;AAAA;AAAA,qDAC2BC,IAD3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACUb,gBAAAA,KADV,QACUA,KADV,EACiBc,MADjB,QACiBA,MADjB;AAAA;AAAA,uBAEQjB,KAAK,CACfkB,IADU,CACLf,KAAK,CAACK,eADD,EACkB,gBAAeQ,IAAf,CADlB,EACwC;AACjDG,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,MAAM,EAAE,kBADD;AAEP,oCAAgB;AAFT;AADwC,iBADxC,EAOVC,IAPU,CAOL,UAAAf,QAAQ,EAAI;AAChBW,kBAAAA,MAAM,CAAC,aAAD,EAAgBX,QAAhB,CAAN;AACAgB,kBAAAA,KAAK,CAAC,SAAD,CAAL;;AACA,kBAAA,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACD,iBAXU,EAYVC,KAZU,CAYJ,UAAAC,KAAK,EAAI;AACdT,kBAAAA,MAAM,CAAC,aAAD,EAAgBS,KAAhB,CAAN;AACAJ,kBAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,iBAfU,CAFR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBDK,IAAAA,KAnBC;AAAA;AAAA;AAAA,uDAmBwBX,IAnBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBOb,gBAAAA,KAnBP,SAmBOA,KAnBP,EAmBcc,MAnBd,SAmBcA,MAnBd;AAAA;AAAA,uBAoBQjB,KAAK,CACfkB,IADU,CACLf,KAAK,CAACI,YADD,EACe,gBAAeS,IAAf,CADf,EACqC;AAC9CG,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,MAAM,EAAE,kBADD;AAEP,oCAAgB;AAFT;AADqC,iBADrC,EAOVC,IAPU,CAOL,UAAAf,QAAQ,EAAI;AAChBW,kBAAAA,MAAM,CAAC,aAAD,EAAgBX,QAAQ,CAACU,IAAT,CAAcY,GAA9B,CAAN;AACAC,kBAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCxB,QAAQ,CAACU,IAAT,CAAcY,GAA9C;AACD,iBAVU,EAWVH,KAXU,CAWJ,UAAAC,KAAK,EAAI;AACdT,kBAAAA,MAAM,CAAC,aAAD,EAAgBS,KAAhB,CAAN;AACAG,kBAAAA,cAAc,CAACE,UAAf,CAA0B,OAA1B;AACAT,kBAAAA,KAAK,CAAC,oCAAD,CAAL;AACD,iBAfU,CApBR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqCDU,IAAAA,WArCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCaf,gBAAAA,MArCb,SAqCaA,MArCb;AAAA;AAAA,uBAsCQjB,KAAK,CACfiC,GADU,CAET,wFAFS,EAGT;AACEd,kBAAAA,OAAO,EAAE;AACPe,oBAAAA,aAAa,EAAE,WAAWL,cAAc,CAACM,KADlC;AAEPf,oBAAAA,MAAM,EAAE;AAFD;AADX,iBAHS,EAUVC,IAVU,CAUL,UAAAf,QAAQ,EAAI;AAChBW,kBAAAA,MAAM,CAAC,aAAD,EAAgBX,QAAQ,CAACU,IAAzB,CAAN;AACD,iBAZU,CAtCR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoDDoB,IAAAA,WApDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDanB,gBAAAA,MApDb,SAoDaA,MApDb;AAAA;AAAA,uBAqDQjB,KAAK,CACfiC,GADU,CAET,mFAFS,EAGT;AACEd,kBAAAA,OAAO,EAAE;AACPe,oBAAAA,aAAa,EAAE,WAAWL,cAAc,CAACM,KADlC;AAEPf,oBAAAA,MAAM,EAAE,kBAFD;AAGP,oCAAgB;AAHT;AADX,iBAHS,EAWVC,IAXU,CAWL,UAAAf,QAAQ,EAAI;AAChBW,kBAAAA,MAAM,CAAC,aAAD,EAAgBX,QAAQ,CAACU,IAAzB,CAAN;AACD,iBAbU,CArDR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoEDqB,IAAAA,UApEC;AAAA;AAAA;AAAA,uDAoEoBrB,IApEpB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoEWC,gBAAAA,MApEX,SAoEWA,MApEX;AAAA;AAAA,uBAqEQjB,KAAK,CAACkB,IAAN,CAAW,uDAAX,EAAoE,gBAAeF,IAAf,CAApE,EAA0F;AACrGG,kBAAAA,OAAO,EAAE;AACPe,oBAAAA,aAAa,EAAE,WAAWL,cAAc,CAACM,KADlC;AAEPf,oBAAAA,MAAM,EAAE,kBAFD;AAGP,oCAAgB;AAHT;AAD4F,iBAA1F,EAMVC,IANU,CAML,UAAAf,QAAQ,EAAI;AAClBgB,kBAAAA,KAAK,CAAC,SAAD,CAAL;;AACA,kBAAA,MAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,IAAlB;AACD,iBATY,EASVC,KATU,CASJ,UAAAC,KAAK,EAAI;AAChBJ,kBAAAA,KAAK,CAACI,KAAD,CAAL;AACD,iBAXY,CArER;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    user_data: [],\n    test_data: [],\n    response: \"\",\n    baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n    baseRegisterUrl:\n      \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n  },\n  mutations: {\n    setResponse(state, resp) {\n      state.response = resp;\n    },\n    setUserData(state, resp) {\n      state.user_data = resp;\n    },\n    setTestData(state, resp) {\n      state.test_data = resp;\n    }\n  },\n  actions: {\n    async register({ state, commit }, data) {\n      return await axios\n        .post(state.baseRegisterUrl, JSON.stringify(data), {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(response => {\n          commit(\"setResponse\", response);\n          alert(\"Успешно\");\n          this.$router.push(\"/\");\n        })\n        .catch(error => {\n          commit(\"setResponse\", error);\n          alert(\"Пользователь уже зарегистрирован!\");\n        });\n    },\n    async login({ state, commit }, data) {\n      return await axios\n        .post(state.baseLoginUrl, JSON.stringify(data), {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(response => {\n          commit(\"setResponse\", response.data.key);\n          sessionStorage.setItem(\"token\", response.data.key);\n        })\n        .catch(error => {\n          commit(\"setResponse\", error);\n          sessionStorage.removeItem(\"token\");\n          alert(\"Такого пользователя не существует!\");\n        });\n    },\n    async getUserData({ commit }) {\n      return await axios\n        .get(\n          \"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\",\n          {\n            headers: {\n              Authorization: \"Token \" + sessionStorage.token,\n              Accept: \"application/json\"\n            }\n          }\n        )\n        .then(response => {\n          commit(\"setUserData\", response.data);\n        });\n    },\n    async getAllTests({ commit }) {\n      return await axios\n        .get(\n          \"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/test/?format=json\",\n          {\n            headers: {\n              Authorization: \"Token \" + sessionStorage.token,\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n          }\n        )\n        .then(response => {\n          commit(\"setTestData\", response.data);\n        });\n    },\n    async createTest({commit}, data) {\n      return await axios.post(\"https://quiez-api.herokuapp.com/api/test/?format=json\", JSON.stringify(data), {\n        headers: {\n          Authorization: \"Token \" + sessionStorage.token,\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        alert(\"Success\");\n        this.$router.push(\"#/\");\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  }\n});\n"]}]}