{"remainingRequest":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js","dependencies":[{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js","mtime":1555940978938},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1554396940214},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\babel-loader\\lib\\index.js","mtime":1554396917624},{"path":"C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\node_modules\\eslint-loader\\index.js","mtime":1554673786667}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front \\u2014 backup\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Azamat\\\\Desktop\\\\QuiEz_Front \\u2014 backup\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user_data: [],\n    response: \"\",\n    baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n    baseRegisterUrl: \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n  },\n  mutations: {\n    setResponse: function setResponse(state, resp) {\n      state.response = resp;\n    },\n    setUserData: function setUserData(state, resp) {\n      state.user_data = resp;\n    }\n  },\n  actions: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, data) {\n        var _this = this;\n\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                _context.next = 3;\n                return axios.post(state.baseRegisterUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response);\n                  alert(\"Успешно\");\n\n                  _this.$router.push(\"/\");\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  alert(\"Пользователь уже зарегистрирован!\");\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function register(_x, _x2) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }(),\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2, data) {\n        var state, commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.post(state.baseLoginUrl, _JSON$stringify(data), {\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (response) {\n                  commit(\"setResponse\", response.data.key);\n                  localStorage.setItem(\"token\", response.data.key);\n                }).catch(function (error) {\n                  commit(\"setResponse\", error);\n                  localStorage.removeItem(\"token\");\n                  alert(\"Такого пользователя не существует!\");\n                });\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }(),\n    getUserData: function () {\n      var _getUserData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref3) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return axios.get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\", {\n                  headers: {\n                    \"Authorization\": \"Token \" + localStorage.token,\n                    Accept: \"application/json\"\n                  }\n                }).then(function (response) {\n                  console.log(response);\n                  commit(\"setUserData\", response.data);\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getUserData(_x5) {\n        return _getUserData.apply(this, arguments);\n      }\n\n      return getUserData;\n    }(),\n    getAllTests: function () {\n      var _getAllTests = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref4) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref4.commit;\n                _context4.next = 3;\n                return axios.get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\", {\n                  headers: {\n                    \"Authorization\": \"Token \" + localStorage.token,\n                    Accept: \"application/json\"\n                  }\n                }).then(function (response) {\n                  console.log(response);\n                  commit(\"setUserData\", response.data);\n                });\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getAllTests(_x6) {\n        return _getAllTests.apply(this, arguments);\n      }\n\n      return getAllTests;\n    }()\n  }\n});",{"version":3,"sources":["C:\\Users\\Azamat\\Desktop\\QuiEz_Front — backup\\src\\store.js"],"names":["Vue","Vuex","axios","use","Store","state","user_data","response","baseLoginUrl","baseRegisterUrl","mutations","setResponse","resp","setUserData","actions","register","data","commit","post","headers","Accept","then","alert","$router","push","catch","error","login","key","localStorage","setItem","removeItem","getUserData","get","token","console","log","getAllTests"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport axios from \"axios\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        user_data: [],\n        response: \"\",\n        baseLoginUrl: \"https://quiez-api.herokuapp.com/api/auth/login/\",\n        baseRegisterUrl:\n            \"https://quiez-api.herokuapp.com/api/auth/register/?format=json\"\n    },\n    mutations: {\n        setResponse(state, resp) {\n            state.response = resp;\n        },\n        setUserData(state, resp) {\n            state.user_data = resp;\n        }\n    },\n    actions: {\n        async register({state, commit}, data) {\n            return await axios\n                .post(state.baseRegisterUrl, JSON.stringify(data), {\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                .then(response => {\n                    commit(\"setResponse\", response);\n                    alert(\"Успешно\");\n                    this.$router.push(\"/\");\n                })\n                .catch(error => {\n                    commit(\"setResponse\", error);\n                    alert(\"Пользователь уже зарегистрирован!\");\n                });\n        },\n        async login({state, commit}, data) {\n            return await axios\n                .post(state.baseLoginUrl, JSON.stringify(data), {\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                .then(response => {\n                    commit(\"setResponse\", response.data.key);\n                    localStorage.setItem(\"token\", response.data.key);\n                })\n                .catch(error => {\n                    commit(\"setResponse\", error);\n                    localStorage.removeItem(\"token\");\n                    alert(\"Такого пользователя не существует!\");\n                });\n        },\n        async getUserData({commit}) {\n            return await axios\n                .get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\", {\n                    headers: {\n                        \"Authorization\": \"Token \" + localStorage.token,\n                        Accept: \"application/json\"\n                    }\n                })\n                .then(response => {\n                    console.log(response);\n                    commit(\"setUserData\", response.data);\n                });\n        },\n        async getAllTests({commit}) {\n            return await axios\n                .get(\"https://cors-anywhere.herokuapp.com/quiez-api.herokuapp.com/api/auth/user/?format=json\", {\n                    headers: {\n                        \"Authorization\": \"Token \" + localStorage.token,\n                        Accept: \"application/json\"\n                    }\n                })\n                .then(response => {\n                    console.log(response);\n                    commit(\"setUserData\", response.data);\n                });\n        }\n    }\n});\n"]}]}